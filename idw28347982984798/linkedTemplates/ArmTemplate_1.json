{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "idw28347982984798"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/stageEmployees')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "employeeDataTable",
								"type": "DatasetReference"
							},
							"name": "employeeAPITable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "employeeTMP",
								"type": "DatasetReference"
							},
							"name": "employeeTMP"
						}
					],
					"transformations": [
						{
							"name": "idwColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EMPLOYEE_ID as string,",
						"          FIRST_NAME as string,",
						"          MIDDLE_NAME as string,",
						"          LAST_NAME as string,",
						"          HIRE_DATE as string,",
						"          TERMINATION_DATE as string,",
						"          STATUS as string,",
						"          EMPLOYEE_TYPE as string,",
						"          LOCATION_NUMBER as string,",
						"          LOCATION_DESCRIPTION as string,",
						"          JOB_TITLE as string,",
						"          JOB_TITLE_DESCRIPTION as string,",
						"          COST_CENTER as string,",
						"          MANAGER_EMPLOYEE_ID as string,",
						"          PERSONAL_EMAIL as string,",
						"          PHONE_NUMBER as string,",
						"          UPDATE_FLAG as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> employeeAPITable",
						"employeeAPITable derive(IDW_GUID = md5(\"HR_DATA\" + EMPLOYEE_ID),",
						"          IDW_USER_CREATE = \"ADF\",",
						"          IDW_USER_MODIFY = \"ADF\",",
						"          IDW_CREATE_TIMESTAMP = currentTimestamp(),",
						"          IDW_MODIFY_TIMESTAMP = currentTimestamp(),",
						"          IDW_PRIMARY_KEY = \"HR_DATA\" + EMPLOYEE_ID,",
						"          IDW_JOB_ID = md5(currentTimestamp()),",
						"          IDW_STG_HASH_VALUE = md5(",
						"coalesce(EMPLOYEE_ID,\"NULL\")+",
						"coalesce(FIRST_NAME,\"NULL\")+",
						"coalesce(MIDDLE_NAME,\"NULL\")+",
						"coalesce(LAST_NAME,\"NULL\")+",
						"coalesce(HIRE_DATE,\"NULL\")+",
						"coalesce(STATUS,\"NULL\")+",
						"coalesce(EMPLOYEE_TYPE,\"NULL\")+",
						"coalesce(LOCATION_NUMBER,\"NULL\")+",
						"coalesce(LOCATION_DESCRIPTION,\"NULL\")+",
						"coalesce(JOB_TITLE,\"NULL\")+",
						"coalesce(JOB_TITLE_DESCRIPTION,\"NULL\")+",
						"coalesce(COST_CENTER,\"NULL\")+",
						"coalesce(MANAGER_EMPLOYEE_ID,\"NULL\")+",
						"coalesce(PERSONAL_EMAIL,\"NULL\")+",
						"coalesce(PHONE_NUMBER,\"NULL\"))) ~> idwColumns",
						"idwColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          IDW_GUID as string,",
						"          IDW_USER_CREATE as string,",
						"          IDW_USER_MODIFY as string,",
						"          IDW_CREATE_TIMESTAMP as timestamp,",
						"          IDW_MODIFY_TIMESTAMP as timestamp,",
						"          IDW_PRIMARY_KEY as string,",
						"          IDW_JOB_ID as string,",
						"          IDW_STG_HASH_VALUE as string,",
						"          EMPLOYEE_ID as string,",
						"          FIRST_NAME as string,",
						"          MIDDLE_NAME as string,",
						"          LAST_NAME as string,",
						"          HIRE_DATE as string,",
						"          TERMINATION_DATE as string,",
						"          STATUS as string,",
						"          EMPLOYEE_TYPE as string,",
						"          LOCATION_NUMBER as string,",
						"          LOCATION_DESCRIPTION as string,",
						"          JOB_TITLE as string,",
						"          JOB_TITLE_DESCRIPTION as string,",
						"          COST_CENTER as string,",
						"          MANAGER_EMPLOYEE_ID as string,",
						"          PERSONAL_EMAIL as string,",
						"          PHONE_NUMBER as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     batchSize: 1000,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          IDW_GUID,",
						"          IDW_USER_CREATE,",
						"          IDW_USER_MODIFY,",
						"          IDW_CREATE_TIMESTAMP,",
						"          IDW_MODIFY_TIMESTAMP,",
						"          IDW_PRIMARY_KEY,",
						"          IDW_JOB_ID,",
						"          IDW_STG_HASH_VALUE,",
						"          EMPLOYEE_ID,",
						"          FIRST_NAME,",
						"          MIDDLE_NAME,",
						"          LAST_NAME,",
						"          HIRE_DATE,",
						"          TERMINATION_DATE,",
						"          STATUS,",
						"          EMPLOYEE_TYPE,",
						"          LOCATION_NUMBER,",
						"          LOCATION_DESCRIPTION,",
						"          JOB_TITLE,",
						"          JOB_TITLE_DESCRIPTION,",
						"          COST_CENTER,",
						"          MANAGER_EMPLOYEE_ID,",
						"          PERSONAL_EMAIL,",
						"          PHONE_NUMBER",
						"     )) ~> employeeTMP"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stageEmployeesAPI')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "hrDataAPI",
								"type": "DatasetReference"
							},
							"name": "employeeAPI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     httpMethod: 'GET',",
						"     timeout: 30,",
						"     requestInterval: 0,",
						"     paginationRules: ['EndCondition' -> 'Empty'],",
						"     responseFormat: ['type' -> 'json', 'documentForm' -> 'documentPerLine']) ~> employeeAPI",
						"employeeAPI sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EMPLOYEE_ID as string,",
						"          FIRST_NAME as string,",
						"          MIDDLE_NAME as string,",
						"          LAST_NAME as string,",
						"          HIRE_DATE as string,",
						"          TERMINATION_DATE as string,",
						"          STATUS as string,",
						"          EMPLOYEE_TYPE as string,",
						"          LOCATION_NUMBER as string,",
						"          LOCATION_DESCRIPTION as string,",
						"          JOB_TITLE as string,",
						"          JOB_TITLE_DESCRIPTION as string,",
						"          COST_CENTER as string,",
						"          MANAGER_EMPLOYEE_ID as string,",
						"          PERSONAL_EMAIL as string,",
						"          PHONE_NUMBER as string",
						"     ),",
						"     partitionFileNames:['apiTest.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/api')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "stageEmployeesAPI",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "stageEmployeesAPI",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"employeeAPI": {
										"page": {
											"value": "@concat('?page=', variables('pageno'))",
											"type": "Expression"
										}
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"pageno": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/stageEmployeesAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/loadContractorFileData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "loadContractors",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "loadContractors",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"contractorData": {},
									"database": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-17T20:02:59Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/loadEmployeeAPIData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "loadEmployees",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "loadEmployees",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"employeeData": {},
									"database": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-15T20:33:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/moveWorkers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "mainWorkers",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "mainWorkers",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"stagedUserView": {},
									"workerWorking": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "workerSproc",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "mainWorkers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[IDW].[IDW_WKR_SP]"
						},
						"linkedServiceName": {
							"referenceName": "idw",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stageContractorFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "stageContractorFile",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "stageContractorFile",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"database": {},
									"stagingFile": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-17T20:17:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stageContractors')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "stageContractors",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "stageContractors",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"contractorStagingFile": {},
									"contractorTMP": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "stagingContractorSproc",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "stageContractors",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[IDW].[HR_CONTRACTOR_SP]"
						},
						"linkedServiceName": {
							"referenceName": "idw",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-17T20:33:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stageEmployees')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "stageEmployees",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "stageEmployees",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"employeeAPITable": {},
									"employeeTMP": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "stagingEmployeeSproc",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "stageEmployees",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[IDW].[HR_EMPLOYEE_SP]"
						},
						"linkedServiceName": {
							"referenceName": "idw",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-17T01:51:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/stageEmployees')]"
			]
		}
	]
}